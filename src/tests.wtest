import direcciones.*
import elementosJuego.*
import juego.*
import niveles.*
import personajePrincipal.*
import inventarioPersonaje.*
import enemigos.*
import wollok.game.*
import texto.*

const unEnemigo = new Enemigo(position = game.at(0,0), especie = zombieBeta)
	
const enemigoMayor = new Enemigo(position=game.at(0,0), especie = zombieAlfa)

describe "Jugador"{
	
	

	test "Al moverse hacia arriba, el jugador actualiza su posición" {

		personaje.position(game.at(0,0))
		personaje.moverA(arriba)
		assert.equals(personaje.position(),game.at(0,1))
	}
	
	
	test "Al chocarse con el borde, el personaje se mantiene en la misma posición en la que estaba" {
		
		personaje.position(game.at(1,10))
		personaje.chocasteConBorde()
		assert.equals(personaje.position(),game.at(1,10))
		
	}

	test "El jugador recupera la vida que perdió al chocarse con la curita"{
		game.addVisual(curita)
		curita.chocasteConJugador()
		assert.equals((personaje.vida()).size(),6)

	}
	
}

describe "Enemigo"{


	
	const algunProyectil = new Proyectil(tipoProyectil = comun)

	test "Cuando se le dispara, el enemigo pierde vida " {
		
		game.addVisual(enemigoMayor)
		game.addVisual(algunProyectil)
		
		algunProyectil.chocasteConEnemigo(enemigoMayor)
		assert.equals(enemigoMayor.vida(),1)
	}

	test "Cuando el enemigo pierde toda su vida, muere" {

		game.addVisual(unEnemigo)
		game.addVisual(algunProyectil)
		algunProyectil.chocasteConEnemigo(unEnemigo)
		assert.notThat(game.hasVisual(unEnemigo))
		
	}
	
	test "Una mina plantada elimina a un enemigo" {
		
		game.addVisual(mina)
		mina.plantarse() 
		game.addVisual(enemigoMayor)
		mina.chocasteConEnemigo(enemigoMayor)
		assert.notThat(game.hasVisual(enemigoMayor))
	}
}

describe "Cargador" {
	
	test "Cuando el personaje dispara, tiene una bala menos en su inventario" {
		
		personaje.disparar()
		assert.equals(municion.elCargador().size(),4)
	}
	
	test "Cuando el personaje recarga su municion, vuelve a tener balas en su inventario" {
		game.addVisual(personaje)
		personaje.cargador().elCargador([]) // no hay balas en el cargador del personaje
		municion.recargar()
		assert.equals(municion.elCargador().size(),5)
	}
	 
	
}





 